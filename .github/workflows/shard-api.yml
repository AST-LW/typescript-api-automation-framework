name: API Test Suite Parallel Shard Execution

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        required: true
        type: choice
        options:
          - "qa"
        default: "qa"
      suite:
        description: "Suite"
        required: true
        type: choice
        options:
          - "regression"
          - "sanity"
        default: "regression"
      shards:
        description: "Number of shards"
        required: true
        type: choice
        options:
          - "4"
        default: "4"
      instances:
        description: "Parallel instances inside each shard"
        required: true
        type: choice
        options:
          - "1"
          - "2"
          - "3"
          - "4"
        default: "1"

env:
  ENV: ${{ github.event.inputs.environment }}
  SUITE: ${{ github.event.inputs.suite }}
  SHARDS: ${{ github.event.inputs.shards }}
  INSTANCES: ${{ github.event.inputs.instances }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
  RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
  REPORT_TO_SEND: ${{ vars.REPORT_TO_SEND }}

jobs:
  build-base-image:
    name: Build Base Image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Generate Dockerfiles
      run: |
        bash scripts/pipeline-shard-execution.sh

    - name: Build Base Image
      run: |
        docker build -t base-image -f ./shard-workspace/Dockerfile_base .

    - name: Export Base Image
      run: |
        docker save base-image -o base-image.tar
        
    - name: Upload Base Image
      uses: actions/upload-artifact@v4
      with:
        name: base-image
        path: base-image.tar
        retention-days: 1
        
    - name: Upload Shard Workspace
      uses: actions/upload-artifact@v4
      with:
        name: shard-workspace
        path: shard-workspace
        retention-days: 1

  build-and-test:
    name: Build and Test
    needs: build-base-image
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        container: [1, 2, 3, 4]  # Add more container numbers if needed
    steps:
    - uses: actions/checkout@v4

    - name: Download Base Image
      uses: actions/download-artifact@v4
      with:
        name: base-image
        
    - name: Download Shard Workspace
      uses: actions/download-artifact@v4
      with:
        name: shard-workspace
        path: shard-workspace
        
    - name: Import Base Image
      run: |
        docker load -i base-image.tar

    - name: Build Docker Image
      run: |
        ls -a shard-workspace
        docker build --cache-from=base-image -t docker-${{ matrix.container }} -f ./shard-workspace/Dockerfile_container_${{ matrix.container }} .

    - name: Run Docker Container
      run: |
        docker run \
          -e ENV=${{ env.ENV }} \
          -e SUITE=${{ env.SUITE }} \
          -e INSTANCES=${{ env.INSTANCES }} \
          -e SLACK_WEBHOOK_URL=${{ env.SLACK_WEBHOOK_URL }} \
          -v ${PWD}/allure-results:/app/allure-results \
          docker-${{ matrix.container }}

    - name: Upload Allure Results
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: allure-results-container-${{ matrix.container }}
        path: allure-results
        retention-days: 1

  combine-allure-results:
    name: Combine Allure Results
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: 
          sparse-checkout: |
            scripts
            src/utils
            package.json
      
      - name: Npm install
        run: |
          npm ci

      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          pattern: allure-results-container-*
          merge-multiple: true
          path: allure-results
        
      - name: Generate Allure Report and Send Notifications
        run: |
          bash scripts/util-scripts/generate-allure-report.sh
          npx ts-node src/utils/test-summary-extractor.ts
          bash scripts/util-scripts/slack-notification.sh
          bash scripts/util-scripts/discord-notification.sh
          bash scripts/util-scripts/email-notification.sh

      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report
