name: API Test Suite CI / CD Execution

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        required: true
        type: choice
        options:
          - "qa"
        default: "qa"
      suite:
        description: "Suite"
        required: true
        type: choice
        options:
          - "regression"
          - "sanity"
        default: "regression"
      instances:
        description: "Parallel instances"
        required: true
        type: choice
        options:
          - "1"
          - "2"
          - "3"
          - "4"
        default: "1"

jobs:
  test-execution:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
        
      - name: Install dependencies
        run: npm ci

      - name: Execute test suite
        env:
          ENV: ${{ github.event.inputs.environment }}
          SUITE: ${{ github.event.inputs.suite }}
          instances: ${{ github.event.inputs.instances }}
        run: |
          bash scripts/pipeline-main-execution.sh
        continue-on-error: true

      - name: Zip Allure results
        run: zip -r allure-results.zip allure-results

      - name: Upload Allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results.zip
          retention-days: 15


      - name: Generate Allure Report
        run: bash scripts/generate-allure-report.sh

      - name: Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure report action
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: gh-pages/allure-history
          keep_reports: 5

      - name: Deploy Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          publish_branch: gh-pages
          publish_dir: gh-pages/allure-history

      - name: Send Slack Notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: bash scripts/slack-notification.sh
